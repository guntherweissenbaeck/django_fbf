# Generated by Codex on 2025-09-22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BackupDestination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('destination_type', models.CharField(choices=[('webdav', 'WebDAV'), ('sftp', 'SFTP')], max_length=10)),
                ('endpoint', models.CharField(help_text='Für WebDAV die Basis-URL (z. B. https://example.org/webdav/), für SFTP den Hostnamen (z. B. backup.example.org).', max_length=255)),
                ('port', models.PositiveIntegerField(default=0, help_text='Port des Ziels. WebDAV verwendet Standard 443/80, SFTP Standard 22. Belassen Sie 0 für Standardports.')),
                ('username', models.CharField(blank=True, max_length=255)),
                ('password', models.CharField(blank=True, max_length=255)),
                ('remote_path', models.CharField(blank=True, help_text='Zielpfad oder Verzeichnis auf dem Server.', max_length=255)),
                ('use_ssl', models.BooleanField(default=True, help_text='Nur für WebDAV relevant.')),
                ('verify_ssl', models.BooleanField(default=True, help_text='SSL-Zertifikate prüfen (WebDAV).')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={'verbose_name': 'Backup-Ziel', 'verbose_name_plural': 'Backup-Ziele', 'ordering': ['name'],},
        ),
        migrations.CreateModel(
            name='SMTPConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('email_backend', models.CharField(default='django.core.mail.backends.smtp.EmailBackend', help_text='Python-Importpfad des E-Mail-Backends.', max_length=255)),
                ('host', models.CharField(max_length=255)),
                ('port', models.PositiveIntegerField(default=587)),
                ('username', models.CharField(blank=True, max_length=255)),
                ('password', models.CharField(blank=True, max_length=255)),
                ('use_tls', models.BooleanField(default=True)),
                ('use_ssl', models.BooleanField(default=False)),
                ('default_from_email', models.EmailField(blank=True, max_length=254)),
                ('timeout', models.PositiveIntegerField(blank=True, help_text='Timeout in Sekunden.', null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={'verbose_name': 'SMTP-Konfiguration', 'verbose_name_plural': 'SMTP-Konfigurationen', 'ordering': ['-is_active', 'name'],},
        ),
        migrations.CreateModel(
            name='BackupLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('backup', 'Backup'), ('restore', 'Restore')], max_length=10)),
                ('status', models.CharField(choices=[('success', 'Erfolgreich'), ('failure', 'Fehlgeschlagen')], max_length=10)),
                ('message', models.TextField(blank=True)),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='administration.backupdestination')),
            ],
            options={'verbose_name': 'Backup-Protokoll', 'verbose_name_plural': 'Backup-Protokolle', 'ordering': ['-created_at'],},
        ),
    ]
