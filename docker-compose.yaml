version: '3.8'

services:
  web:
    build: ./app
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python manage.py makemigrations; python manage.py migrate; python manage.py runserver 0.0.0.0:8000'
    volumes:
      - ./app:/app
    expose:
      - 8000
    environment:
      - "ALLOWED_HOSTS=${ALLOWED_HOSTS}"
      - "CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}"
      - "DB_HOST=${DB_HOST}"
      - "DB_NAME=${DB_NAME}"
      - "DB_PASSWORD=${DB_PASSWORD}"
      - "DB_PORT=${DB_PORT}"
      - "DB_USER=${DB_USER}"
      - "DEBUG=${DEBUG}"
      - "DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}"
      - "SECRET_KEY=${SECRET_KEY}"
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`${DJANGO_ALLOWED_HOSTS}`)"
  db:
    image: postgres:15-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - "POSTGRES_USER=${DB_USER}"
      - "POSTGRES_PASSWORD=${DB_PASSWORD}"
      - "POSTGRES_DB=${DB_NAME}"
  traefik:
    image: traefik:v2.9.6
    ports:
      - 8008:80
      - 8081:8080
    volumes:
      - "$PWD/traefik.dev.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  postgres_data:
